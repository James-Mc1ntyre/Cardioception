Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.13/x64/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
counts = []
for nTrial in range(6):

    print(f'Analyzing trial number {nTrial+1}')

    signal, peaks = ppg_peaks(ppg[str(nTrial)][0], clean_extra=True, sfreq=75)
    axs = plot_raw(
        signal=signal, sfreq=1000, figsize=(18, 5), clean_extra=True,
        show_heart_rate=True
        );

    # Show the windows of interest
    # We need to convert sample vector into Matplotlib internal representation
    # so we can index it easily
    x_vec = date2num(
        pd.to_datetime(
            np.arange(0, len(signal)), unit="ms", origin="unix"
            )
        )
    l = len(signal)/1000
    for i in range(2):
        # Pre-trial time
        axs[i].axvspan(
            x_vec[0], x_vec[- (3+df.Duration.iloc[nTrial]) * 1000]
            , alpha=.2
            )
        # Post trial time
        axs[i].axvspan(
            x_vec[- 3 * 1000], 
            x_vec[- 1], 
            alpha=.2
            )
    plt.show()

    # Detected heartbeat in the time window of interest
    peaks = peaks[int(l - (3+df.Duration.iloc[nTrial]))*1000:int((l-3)*1000)]

    rr = np.diff(np.where(peaks)[0])

    _, axs = plt.subplots(ncols=2, figsize=(12, 6))
    plot_subspaces(rr=rr, ax=axs);
    plt.show()

    trial_counts = np.sum(peaks)
    print(f'Reported: {df.Reported.loc[nTrial]} beats ; Detected : {trial_counts} beats')
    counts.append(trial_counts)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Input [0;32mIn [7][0m, in [0;36m<cell line: 2>[0;34m()[0m
[1;32m     38[0m rr [38;5;241m=[39m np[38;5;241m.[39mdiff(np[38;5;241m.[39mwhere(peaks)[[38;5;241m0[39m])
[1;32m     40[0m _, axs [38;5;241m=[39m plt[38;5;241m.[39msubplots(ncols[38;5;241m=[39m[38;5;241m2[39m, figsize[38;5;241m=[39m([38;5;241m12[39m, [38;5;241m6[39m))
[0;32m---> 41[0m [43mplot_subspaces[49m[43m([49m[43mrr[49m[38;5;241;43m=[39;49m[43mrr[49m[43m,[49m[43m [49m[43max[49m[38;5;241;43m=[39;49m[43maxs[49m[43m)[49m;
[1;32m     42[0m plt[38;5;241m.[39mshow()
[1;32m     44[0m trial_counts [38;5;241m=[39m np[38;5;241m.[39msum(peaks)

[0;31mTypeError[0m: plot_subspaces() got an unexpected keyword argument 'ax'
TypeError: plot_subspaces() got an unexpected keyword argument 'ax'

